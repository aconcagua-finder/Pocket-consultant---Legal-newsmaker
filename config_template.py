"""
–®–∞–±–ª–æ–Ω –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è NEWSMAKER

–ò–ù–°–¢–†–£–ö–¶–ò–Ø:
1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç–æ—Ç —Ñ–∞–π–ª –∏ –Ω–∞–∑–æ–≤–∏—Ç–µ –µ–≥–æ config.py
2. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
3. –ù–ò–ö–û–ì–î–ê –Ω–µ –∫–æ–º–º–∏—Ç—å—Ç–µ config.py —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –∫–ª—é—á–∞–º–∏!
"""

import os
from pathlib import Path
from typing import Optional
import sys

# ==================================================
# API –ö–õ–Æ–ß–ò
# ==================================================

# Perplexity API
PERPLEXITY_API_KEY = "pplx-YOUR_PERPLEXITY_API_KEY_HERE"

# OpenAI API
OPENAI_API_KEY = "sk-YOUR_OPENAI_API_KEY_HERE"

# Telegram
TELEGRAM_BOT_TOKEN = "YOUR_BOT_TOKEN:YOUR_BOT_TOKEN_HERE"
TELEGRAM_CHANNEL_ID = "@your_channel_or_chat_id"

# ==================================================
# –ù–ê–°–¢–†–û–ô–ö–ò –†–ê–°–ü–ò–°–ê–ù–ò–Ø
# ==================================================

# –í—Ä–µ–º—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ —Å–±–æ—Ä–∞ –Ω–æ–≤–æ—Å—Ç–µ–π (—Ñ–æ—Ä–º–∞—Ç HH:MM)
COLLECTION_TIME = "08:30"

# –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–π (7 –≤—Ä–µ–º—ë–Ω –¥–ª—è 7 –Ω–æ–≤–æ—Å—Ç–µ–π)
PUBLICATION_SCHEDULE = [
    "09:05",  # –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç 1 (–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω–∞—è)
    "11:05",  # –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç 2 (–æ—á–µ–Ω—å –≤–∞–∂–Ω–∞—è)
    "13:05",  # –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç 3 (–≤–∞–∂–Ω–∞—è)
    "15:10",  # –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç 4 (—Å—Ä–µ–¥–Ω—è—è –≤–∞–∂–Ω–æ—Å—Ç—å)
    "17:05",  # –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç 5 (—É–º–µ—Ä–µ–Ω–Ω–∞—è –≤–∞–∂–Ω–æ—Å—Ç—å)
    "19:00",  # –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç 6 (–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è)
    "21:05"   # –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç 7 (–Ω–∏–∑–∫–∞—è –≤–∞–∂–Ω–æ—Å—Ç—å)
]

# –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ–≤–æ—Å—Ç–µ–π –≤ –¥–µ–Ω—å
MAX_NEWS_PER_DAY = 7

# ==================================================
# –ù–ê–°–¢–†–û–ô–ö–ò API
# ==================================================

# Perplexity
PERPLEXITY_MODEL = "sonar-deep-research"
PERPLEXITY_MAX_TOKENS = 8192
PERPLEXITY_TEMPERATURE = 0.7

# OpenAI
OPENAI_IMAGE_MODEL = "gpt-image-1"
OPENAI_IMAGE_SIZE = "1536x1024"
OPENAI_IMAGE_QUALITY = "medium"  # medium –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏, high –¥–ª—è –∫–∞—á–µ—Å—Ç–≤–∞

# ==================================================
# –ü–£–¢–ò –ò –î–ò–†–ï–ö–¢–û–†–ò–ò
# ==================================================

# –ë–∞–∑–æ–≤–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞
BASE_DIR = Path(__file__).parent

# –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–∞–Ω–Ω—ã—Ö
DATA_DIR = BASE_DIR / "data"
LOGS_DIR = BASE_DIR / "logs"
IMAGES_DIR = DATA_DIR / "images"

# ==================================================
# –ù–ê–°–¢–†–û–ô–ö–ò –°–ò–°–¢–ï–ú–´
# ==================================================

# –¢–∞–π–º–∞—É—Ç—ã
REQUEST_TIMEOUT = 60
IMAGE_GENERATION_TIMEOUT = 120

# –ü–æ–≤—Ç–æ—Ä–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏
MAX_RETRIES = 3
RETRY_DELAY = 30

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
LOG_LEVEL = "INFO"  # DEBUG, INFO, WARNING, ERROR
LOG_ROTATION = "1 week"
LOG_RETENTION = "1 month"

# –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞
MIN_CONTENT_LENGTH = 100
MAX_CONTENT_LENGTH = 4000

# ==================================================
# –†–ï–ñ–ò–ú–´ –†–ê–ë–û–¢–´
# ==================================================

# –†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏
DEBUG = False

# –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º (–Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ Telegram)
TEST_MODE = False

# ==================================================
# –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –°–û–ó–î–ê–ù–ò–ï –î–ò–†–ï–ö–¢–û–†–ò–ô
# ==================================================

# –°–æ–∑–¥–∞—ë–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ
for directory in [DATA_DIR, LOGS_DIR, IMAGES_DIR]:
    directory.mkdir(parents=True, exist_ok=True)

# ==================================================
# –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò
# ==================================================

def get_env_var(key: str, default: Optional[str] = None, required: bool = False) -> str:
    """
    –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
    
    Args:
        key: –ò–º—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
        default: –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        required: –û–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è
        
    Returns:
        str: –ó–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
    """
    value = os.getenv(key, default)
    
    if required and not value:
        print(f"‚ùå –û–®–ò–ë–ö–ê: –û–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è {key} –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!")
        print(f"üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env –∏ –¥–æ–±–∞–≤—å—Ç–µ: {key}=your_value")
        sys.exit(1)
    
    return value or ""

# ==================================================
# –ó–ê–ì–†–£–ó–ö–ê –ò–ó –û–ö–†–£–ñ–ï–ù–ò–Ø (–µ—Å–ª–∏ –µ—Å—Ç—å .env)
# ==================================================

# –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ .env —Ñ–∞–π–ª–∞
try:
    from dotenv import load_dotenv
    load_dotenv()
    
    # –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –æ–∫—Ä—É–∂–µ–Ω–∏—è –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
    PERPLEXITY_API_KEY = get_env_var("PERPLEXITY_API_KEY", PERPLEXITY_API_KEY)
    OPENAI_API_KEY = get_env_var("OPENAI_API_KEY", OPENAI_API_KEY)
    TELEGRAM_BOT_TOKEN = get_env_var("TELEGRAM_BOT_TOKEN", TELEGRAM_BOT_TOKEN)
    TELEGRAM_CHANNEL_ID = get_env_var("TELEGRAM_CHANNEL_ID", TELEGRAM_CHANNEL_ID)
    
except ImportError:
    pass  # dotenv –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω - –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ —Ñ–∞–π–ª–∞

# ==================================================
# –í–ê–õ–ò–î–ê–¶–ò–Ø –ü–†–ò –ò–ú–ü–û–†–¢–ï
# ==================================================

def validate_config():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    errors = []
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–µ–π
    if not PERPLEXITY_API_KEY or "YOUR_" in PERPLEXITY_API_KEY:
        errors.append("PERPLEXITY_API_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
    
    if not OPENAI_API_KEY or "YOUR_" in OPENAI_API_KEY:
        errors.append("OPENAI_API_KEY –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
    
    if not TELEGRAM_BOT_TOKEN or "YOUR_" in TELEGRAM_BOT_TOKEN:
        errors.append("TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
    
    if not TELEGRAM_CHANNEL_ID or "your_" in TELEGRAM_CHANNEL_ID:
        errors.append("TELEGRAM_CHANNEL_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
    
    return errors

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ
config_errors = validate_config()
if config_errors and not TEST_MODE:
    print("‚ö†Ô∏è –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π:")
    for error in config_errors:
        print(f"  - {error}")
    print("\nüí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: –°–∫–æ–ø–∏—Ä—É–π—Ç–µ config_template.py –≤ config.py –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è")